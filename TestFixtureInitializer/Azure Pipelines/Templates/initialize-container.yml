parameters:
  artifactVersion: ''
  artifactCountry: ''
  versionSelect: ''
  sasToken: ''
  forceCreateImage: false
  uninstallMsApps: true
  licenseUrl: ''

steps:          
- task: ALOpsDockerCreate@1
  condition: and(in(variables.versionSelect, '', 'latest'), ne(variables.artifactVersion, ''), ne(variables.artifactCountry, ''))
  displayName: "ALOPS - Create Docker Image - Version ${{ parameters.artifactVersion }} ${{ parameters.artifactCountry }}"
  inputs:
    artifactversion: ${{ parameters.artifactVersion }}
    artifactcountry: ${{ parameters.artifactCountry }}
    forcecreateimage: ${{ parameters.forceCreateImage }}
    licensefile: ${{ parameters.licenseUrl }} 

- task: ALOpsDockerCreate@1
  condition: and(in(variables.versionSelect, '', 'latest'), eq(variables.artifactVersion, ''), eq(variables.artifactCountry, ''))
  displayName: "ALOPS - Create Docker Image - latest w1"
  inputs:
    artifactcountry: 'w1'
    versionselect: 'latest'
    forcecreateimage: ${{ parameters.forceCreateImage }}
    licensefile: ${{ parameters.licenseUrl }}

- task: ALOpsDockerCreate@1
  condition: and(in(variables.versionSelect, '', 'latest'), eq(variables.artifactVersion, ''), ne(variables.artifactCountry, ''))
  displayName: "ALOPS - Create Docker Image - latest ${{ parameters.artifactCountry }}"
  inputs:
    artifactcountry: ${{ parameters.artifactCountry }}
    versionselect: 'latest'
    forcecreateimage: ${{ parameters.forceCreateImage }}
    licensefile: ${{ parameters.licenseUrl }}

- task: ALOpsDockerCreate@1
  condition: and(in(variables.versionSelect, 'nextminor', 'nextmajor'), eq(variables.artifactCountry, ''))
  displayName: "ALOPS - Create Docker Image -  Insider ${{ parameters.versionSelect }} base"
  inputs:
    artifacttype: 'Sandbox'
    artifactcountry: 'base'
    sastoken: ${{ parameters.sasToken }}
    storageaccount: 'bcinsider'
    forcecreateimage: ${{ parameters.forceCreateImage }}
    licensefile: ${{ parameters.licenseUrl }}

- task: ALOpsDockerCreate@1
  condition: and(in(variables.versionSelect, 'nextminor', 'nextmajor'), ne(variables.artifactCountry, ''))
  displayName: "ALOPS - Create Docker Image -  Insider ${{ parameters.versionSelect }} ${{ parameters.artifactCountry }}"
  inputs:
    artifacttype: 'Sandbox'
    artifactcountry: ${{ parameters.artifactCountry }}
    sastoken: ${{ parameters.sasToken }}
    storageaccount: 'bcinsider'
    forcecreateimage: ${{ parameters.forceCreateImage }}
    licensefile: ${{ parameters.licenseUrl }}

- task: ALOpsDockerStart@1
  displayName: 'ALOPS - Start Docker Container'

- task: ALOpsDockerWait@1
  displayName: 'ALOPS - Wait for Docker Container to start'
  inputs:
    search_string: 'Ready for connections!'

- task: ALOpsDockerExec@1
  condition: eq(variables.uninstallMsApps, 'true')
  displayName: 'ALOPS - Uninstall MS apps (but leave Application apps)'
  inputs:
    inline_script: |
      Get-NAVAppInfo -ServerInstance BC -tenant default -tenantspecificproperties | 
        where isinstalled -eq $true | 
          Where Publisher -eq Microsoft | 
            where {$_.Name -ne 'Base Application' -and $_.Name -ne 'System Application' -and $_.Name -ne 'Application'}  | 
              uninstall-navapp -tenant default -force

- task: ALOpsAppPublish@1
  displayName: 'ALOPS - Install AL TestTool'
  inputs:
    usedocker: true
    installaltesttool: true
    skip_verification: true
    install_al_app_names: |
      Any
      Library Assert
      Library Variable Storage
      System Application Test Library
      Tests-TestLibraries
      Permissions Mock
      Test Runner
